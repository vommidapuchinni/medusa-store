name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: 'vommidapuchinni/medusa-store'

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan
        if: github.event.inputs.action == 'apply'

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: |
          cd terraform
          terraform destroy -auto-approve

      # Add the commands that were previously in user_data for EC2
      - name: Install Dependencies and Set Up Medusa
        if: github.event.inputs.action == 'apply'
        run: |
          # Update and install Node.js, npm, PostgreSQL, and Redis
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt install -y nodejs npm postgresql postgresql-contrib redis-server

          # Start and enable PostgreSQL and Redis services
          sudo systemctl start postgresql && sudo systemctl enable postgresql
          sudo systemctl start redis-server && sudo systemctl enable redis-server

          # Create PostgreSQL user and database
          sudo -u postgres psql -c "CREATE USER medusa_user WITH PASSWORD 'chinni' CREATEDB;"
          sudo -u postgres psql -c "CREATE DATABASE medusa_db OWNER medusa_user;"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE medusa_db TO medusa_user;"

          # Clone Medusa repository and install dependencies
          if [ ! -d "./medusa-store" ]; then
            git clone https://github.com/vommidapuchinni/medusa-store.git ./medusa-store
          else
            cd ./medusa-store && git pull
          fi

          cd ./medusa-store

          # Install Medusa CLI and dependencies
          sudo npm install -g @medusajs/medusa-cli
          npm install

          # Run database migrations
          npx medusa migrations run

          # Start Medusa in the background
          nohup npm run start > medusa.log 2>&1 &
          echo "Medusa deployment initiated."

