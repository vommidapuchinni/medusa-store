name: CI/CD Pipeline for Medusa Deployment on ECS Fargate Spot

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose whether to apply or destroy Terraform resources'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Terraform environment
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      # Debug Step: Print the action input directly to verify
      - name: Debug Action Input
        run: echo "Action selected: ${{ github.event.inputs.action }}"

      # Step 3: Initialize Terraform (in ecs-fargate directory)
      - name: Terraform Init
        working-directory: ./ecs-fargate
        run: terraform init

      # Step 4: Apply or Destroy Terraform Resources based on user input
      - name: Terraform Apply or Destroy
        working-directory: ./ecs-fargate
        run: |
          echo "Action is ${{ github.event.inputs.action }}"
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            echo "Applying Terraform changes..."
            terraform apply -auto-approve
          elif [ "${{ github.event.inputs.action }}" == "destroy" ]; then
            echo "Destroying Terraform resources..."
            terraform destroy -auto-approve
          else
            echo "Invalid action specified."
            exit 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # Step 5: Log in to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: private
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # Step 6: Build Docker Image for Medusa (only for 'apply' action)
      - name: Build Docker Image
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          IMAGE_NAME=medusa-app
          TAG=$(date +%Y%m%d%H%M%S)
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$TAG .
          echo "TAG=$TAG" >> $GITHUB_ENV  # Save the tag for later steps

      # Step 7: Tag and Push Docker Image to ECR (only for 'apply' action)
      - name: Push Docker Image to ECR
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          IMAGE_NAME=medusa-app
          TAG=${{ env.TAG }}
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$IMAGE_NAME
          docker tag $IMAGE_NAME:latest $ECR_URI:latest
          docker tag $IMAGE_NAME:$TAG $ECR_URI:$TAG
          docker push $ECR_URI:latest
          docker push $ECR_URI:$TAG

      # Step 8: Show Terraform Outputs (only if 'apply' is selected)
      - name: Show Terraform Outputs
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: ./ecs-fargate
        run: terraform output

      # Step 9: Log out from ECR
      - name: Logout from ECR
        run: docker logout

