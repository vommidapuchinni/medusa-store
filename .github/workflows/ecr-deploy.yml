name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - master  # This triggers the workflow on push to the master branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Using the latest version

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: false
          registry-type: private
          skip-logout: false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}  # Ensure this is set in your secrets

      - name: Create ECR Repository
        id: create_ecr
        run: |
          aws ecr create-repository --repository-name medusa-repo --region ${{ secrets.AWS_REGION }} || echo "ECR repository already exists"

      - name: Build Docker Image
        run: |
          IMAGE_NAME=medusa-repo
          TAG=$(date +%Y%m%d%H%M%S)
          echo "Building Docker image with TAG: $TAG"  # Debug output
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$TAG .

      - name: Push Docker Image to ECR
        run: |
          IMAGE_NAME=medusa-repo
          TAG=$(date +%Y%m%d%H%M%S)  # Re-defining TAG here
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$IMAGE_NAME
          echo "Pushing to ECR URI: $ECR_URI"  # Debug output
          echo "Pushing image with TAG: $TAG"  # Debug output
          # Tag and push the Docker image to ECR
          docker tag $IMAGE_NAME:latest $ECR_URI:latest
          docker tag $IMAGE_NAME:$TAG $ECR_URI:$TAG
          docker push $ECR_URI:latest
          docker push $ECR_URI:$TAG

      - name: Logout from ECR
        run: docker logout
